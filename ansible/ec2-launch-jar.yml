---
- name: Create a micro instance in AWS EC2
  hosts: localhost
  gather_facts: false
  vars:
    keypair: sshtest
    instance_type: t2.micro
    security_group: SinensiaEC2
    subnet_id: subnet-0bcb76bfbc6174487
    image: ami-0d71ea30463e0ff8d
    region: eu-west-1
  tasks:
    - name: Launch instance
      ec2:
        key_name: "{{ keypair }}"
        group: "{{ security_group }}"
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        wait: true
        region: "{{ region }}"
        vpc_subnet_id: "{{ subnet_id }}"
        assign_public_ip: yes
        instance_tags:
          Name: ansibleInstance
      register: ec2

    - name: Add new instance to host group
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: launched
      loop: "{{ ec2.instances }}"

    - name: Wait for SSH to come up
      delegate_to: "{{ item.public_dns_name }}"
      wait_for_connection:
        delay: 10
        sleep: 5
        timeout: 300
      vars:
        ansible_user: ec2-user
      loop: "{{ ec2.instances }}"

- name: Configure instances
  hosts: launched
  become: true
  gather_facts: true
  vars:
    ansible_user: ec2-user
  tasks:
    - name: Install openjdk
     # yum: name=java-openjdk11 state=present update_cache=yes
      become: true
      shell: sudo amazon-linux-extras install -y java-openjdk11

    - name: Install hello-springrest
      copy:
        src: /home/sinensia/Desktop/hello-springrest/build/libs/rest-service-0.0.1-SNAPSHOT.jar
        dest: /var/myapp/

    - name: SymLink
      become: true
      shell: sudo ln -s /var/myapp/rest-service-0.0.1-SNAPSHOT.jar /etc/init.d/myapp

    - name: Start jar as a service
      service:
      name: myapp
      enabled: true
      state: started


